<script>
export default {
  config: {
    pages: [
      'pages/index',
      'pages/detail',
      'pages/search',
      'pages/product',
      'pages/accordion',
      'pages/dashborad',
      'pages/saleIssues',
      'pages/mydate',
      'pages/saleIssue/list',
      'pages/saleIssue/search',
      'pages/saleIssue/detail',
      'pages/saleIssue/add',
      "pages/stat"
    ],
    theme: {
      'theme-color': '#3399ff'
    },
    window: {
      scrollType: 'div',
      navigationBarBackgroundColor: '#ffffff',
      navigationBarTextStyle: 'black',
      navigationBarBorderColor: 'rgba(231, 231, 231, 0.6)'
    },
    tabBar: {
      id: 'mainTabBar',
      color: '#7a7e83',
      selectedColor: '#39f',
      borderColor: 'rgba(231, 231, 231, 0.6)',
      backgroundColor: '#fff',
      list: [
        {
          pagePath: 'pages/index',
          iconName: 'home-page',
          text: '首 页'
        },
        {
          pagePath: 'pages/saleIssue/list',
          iconName: 'currency02',
          text: '销 售'
        },
        {
          // pagePath: 'pages/componentDemo/tabBar5-3',
          pagePath: 'pages/common/404',
          iconName: 'plus',
          text: '新 增'
        },
        {
          pagePath: 'pages/stat',
          iconName: 'home-graphical',
          text: '统 计'
        },
        {
          pagePath: 'pages/user',
          iconName: 'home-tabBar',
          text: '基 础'
        }
      ]
    },
    networkBaseUrl: ''
  },
  data() {
    return {
      canClick: true, // true 时可以取消弹出菜单
      showPopicon: false,
      fixedzindex: null,
      tabbaricon: 'none',
      togglestyle: 'default',
      hideOnTap: true,
      offsetX: ui.WIN_WIDTH / 2,
      //全局变量
      globalData: {},
      WIN_WIDTH: ui.WIN_WIDTH,
      tabIndex: 0,
      tabBarList: [],
      navStyle: {},
      tabBar: {},
      tabBarHeight: 56,
      isApp: ui.IS_APP,
      headerHeight: ui.DEFAULT_HEADER_HEIGHT,
      paths: [],
      barHeight: ui.STATUS_BAR_HEIGHT,
      showSlideMenu: false
    }
  },
  computed: {
    // 控制通用导航栏是否显示
    navigationBarVisible() {
      return this.winConfig.navigationStyle !== 'custom'
    },
    // 控制通用导航栏是否显示返回按钮（首页不显示，其他页显示）
    showBack() {
      let homePath = this.paths[0]
      if (this.tabBar && this.tabBar.paths) {
        return this.tabBar.paths.indexOf(homePath) < 0
      } else {
        return homePath !== this.$route.path
      }
    },
    // 通用导航栏应用app.json和page.json的设置
    winConfig() {
      let window = this.$router.options.window
      let config = { ...window, ...this.pageConfig }
      let color = config.navigationBarTextStyle || 'white'

      let scrollType = document.body.getAttribute('scroll-type')

      this.navStyle = {
        backgroundColor: config.navigationBarBackgroundColor,
        color: color,
        borderBottom: `1px solid ${config.navigationBarBorderColor}`,
        backgroundImage: config.navigationBarBackgroundGradient,
        position: scrollType === 'body' ? 'fixed' : 'absolute'
      }

      if (this.navStyle.backgroundColor) {
        this.navStyle.backgroundImage = 'none'
      }

      if (config.navigationBarBorderColor) {
        this.navStyle.borderBottom = `1px solid ${
          config.navigationBarBorderColor
        }`
      } else {
        this.navStyle.borderBottom = '0'
      }
      return config
    },
    // 控制底部标签栏是否显示
    isTabBar() {
      return this.tabBarList && this.tabBarList.length > 0
    },
    // 设置底部标签栏样式
    tabBarStyle() {
      let style = {}
      if (this.navigationBarVisible && this.tabBar.position === 'top') {
        style.top = this.headerHeight + 'px'
      }
      let scrollType = document.body.getAttribute('scroll-type')
      style.position = scrollType === 'body' ? 'fixed' : 'absolute'
      return style
    },

    bottom() {
      return this.isTabBar ? `${this.tabBarHeight}px` : 0
    },
    // 底部标签栏应用app.json和page.json的设置
    pageConfig() {
      if (this.isTabBar) {
        return this.tabBarList[this.tabIndex].pageConfig
      } else {
        return this.$route.meta.pageConfig || window.__$uiPageConfig
      }
    }
  },
  watch: {
    '$route.path'(path) {
      this.handleIosGesture()
      this.initTab()
      this.initBodyStyle()
    }
  },
  // 初始化
  created() {
    this.initTab()
    this.initPaths()
    this.$nextTick(() => {
      this.handleIosGesture()
    })
  },
  methods: {
    // 关闭popicon图标导航
    hidepopicon(e) {
      if (this.canClick) {
        this.showPopicon = false
        this.canClick = false
        this.togglestyle = 'closestyle'
      } else {
        return false
      }
    },
    // 关闭popicon遮罩
    popiconMaskhide() {
      this.canClick = true
      this.togglestyle = 'default'
      this.tabbaricon = 'none'
    },
    // tabBar示例用到，底部标签栏切换前事件处理
    handleTabBeforeChange({ id, index, next }) {
      if (id === 'mainTabBar' && index === 2) {
        if (this.canClick) {
          this.showPopicon = true
          this.canClick = false
          this.fixedzindex = 'z-index:701'
          this.tabbaricon = 'block'
          this.togglestyle = 'openstyle'
          this.hideOnTap = false
          const that = this
          setTimeout(() => {
            that.canClick = true
            that.hideOnTap = true
          }, 700)
        } else {
          return false
        }
      } else {
        next()
      }
    },
    handleNavIconTap() {
      this.showSlideMenu = !this.showSlideMenu
    },
    // 初始化底部标签栏
    initTab() {
      this.tabBar = this.getTabBar()
      this.tabBarList = this.tabBar.list
      if (this.tabBar.paths) {
        this.tabIndex = this.tabBar.paths.indexOf(this.$route.path)
      }
    },
    // 初始化路由
    initPaths() {
      let routes = this.$router.options.routes
      this.paths = routes.map(item => {
        return item.path
      })
    },
    initBodyStyle() {
      if (this.winConfig && this.winConfig.backgroundColor) {
        document.body.style.backgroundColor = this.winConfig.backgroundColor
      }
    },
    // iOS是否禁用侧滑退出
    handleIosGesture() {
      if (ui.IS_IOS) {
        ui.setPagePopGesture &&
          ui.setPagePopGesture({
            openPagePopGesture: !this.pageConfig.disableIosGesture
          })
      }
    },
    // tabBar示例用到，底部标签栏切换前事件处理
    // handleTabBeforeChange({ id, index, next }) {
    //   next()
    // },

    // tabBar示例用到，底部标签栏切换后事件处理
    handleTabChange({ id, index }) {},
    // 回退处理
    handleBack() {
      ui.navigateBack()
    },
    getTabBar() {
      let tabBars = [
        this.$router.options.tabBar,
        ...this.$router.options.pageTabBars
      ]
      for (let i = 0; i < tabBars.length; i++) {
        if (
          tabBars[i].paths &&
          tabBars[i].paths.indexOf(this.$route.path) > -1
        ) {
          return tabBars[i]
        }
      }
      return {}
    }
  },
  mounted() {}
}
</script>

<template>
  <ui-view id="ui-app">
    <ui-slide-menu width="280" threshold="30" touch="{{ pageConfig.touchSlideMenu }}" ui:model="showSlideMenu">

    <ui-view slot="panel">
    <!-- 通用导航栏 -->
      <ui-nav-bar
        ui:if="pageConfig"
        ui:show="navigationBarVisible"
        style="{{ navStyle }}">
        <ui-row>
          <ui-col width="80">
            <span class="back" bindtap="handleBack" ui:show="{{showBack}}">
              <ui-icon type="arrow-left" font-size="24"></ui-icon>返回
            </span>
            <span class="back" ui:show="{{!showBack}}" bindtap="handleNavIconTap">
              <ui-icon type="list" color="#2B333B" size="16"></ui-icon>
            </span>
          </ui-col>
          <ui-col width="{{WIN_WIDTH-160}}" align="center" content-direction="row" class="nav-bar-center">
            <ui-view class="nav-bar-center-loading" style="display: none;"></ui-view>
            <span class="nav-bar-center-text">{{ $t(winConfig.navigationBarTitleText) }}</span>
          </ui-col>
          <ui-col width="80">

          </ui-col>
        </ui-row>
      </ui-nav-bar>

    <!-- 页面路由 -->
    <keep-alive>
      <router-view ui:if="{{ !isApp && pageConfig.cache }}" class="router-view"></router-view>
    </keep-alive>
    <router-view ui:if="{{ isApp || !pageConfig.cache }}" class="router-view"></router-view>

    <!-- 底部标签栏 -->
    <ui-tab-bar
        bindbeforechange="handleTabBeforeChange"
        bindchange="handleTabChange"
        ui:if="isTabBar"
        ui:model="tabIndex"
        style="{{ tabBarStyle }}"
        id="{{ tabBar.id }}"
        group-id="{{ tabBar.groupId }}"
        icon-size="{{ tabBar.iconSize }}"
        font-size="{{ tabBar.fontSize }}"
        position="{{ tabBar.position }}"
        list="{{ tabBarList }}"
        paths="{{ tabBar.paths }}"
        background-color="{{ tabBar.backgroundColor }}"
        border-color="{{ tabBar.borderColor }}"
        color="{{ tabBar.color }}"
        selected-color="{{ tabBar.selectedColor }}">
    </ui-tab-bar>

    <!-- tabbar个性按钮示例用到：弹出图标导航菜单 -->
    <ui-fixed-view top="0" left="0" right="0" style="{{{ 'z-index': '1000' ,'display':tabbaricon}}}">
      <ui-pop-icon mask-hide-delay="500" blur="light" hide-on-tap="{{hideOnTap}}"  bindhide="hidepopicon($event)" bindmaskhide="popiconMaskhide"  left="{{offsetX}}" ui:model="showPopicon" class="pop-icon-demo" animate="bounce" >
        <ui-pop-icon-item item-color="#f9dc66" top="-85" left="{{0 - offsetX / 2 - 48}}">
          <ui-view class="icon_view">
            <ui-image src="{{require('./images/icon1.png')}}" width="30"></ui-image>
          </ui-view>
        </ui-pop-icon-item>
        <ui-pop-icon-item item-color="#f9dc66" top="-85" left="{{0 - 24}}">
          <ui-view class="icon_view">
            <ui-image src="{{require('./images/icon2.png')}}" width="30"></ui-image>
          </ui-view>
        </ui-pop-icon-item>
        <ui-pop-icon-item item-color="#f9dc66" top="-85" left="{{0 + offsetX / 2}}">
          <ui-view class="icon_view">
            <ui-image src="{{require('./images/icon3.png')}}" width="30"></ui-image>
          </ui-view>
        </ui-pop-icon-item>
      </ui-pop-icon>
    </ui-fixed-view>
    <ui-fixed-view bottom="25" left="0" right="0" style="{{fixedzindex}}">
      <ui-view class="{{togglestyle}}" style="text-align:center;width:35px;height:35px;margin:0 auto" bindtap="hidepopicon($event)">
      </ui-view>
    </ui-fixed-view>

  </ui-view>
  </ui-slide-menu>
  </ui-view>
</template>



<style lang="less">
@import './static/css/animate.css';
@import './static/css/loading.less';
@import './static/font/iconfont.css';
* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

body {
  font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB',
    'Microsoft YaHei', SimSun, sans-serif;
  -webkit-touch-callout: none;
}

html,
body {
  font-size: 12px;
}

#ui-app {
  width: 100%;
  height: 100%;
}

.touchui-hover {
  background-color: #eee !important;
}
.iphonex-bottom {
  height: env(safe-area-inset-bottom);
  background-color: #fff;
  width: 100%;
}
.ui-nav-bar {
  top: 0;
  left: 0;
  width: 100%;
  .nav-bar-left,
  .nav-bar-right {
    position: relative;
    width: 66px;
    text-align: center;
  }
  .back {
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    i {
      margin-left: 10px;
    }
  }
  .nav-bar-center-text {
    .mix-text-overflow();
  }
}

.ui-tab-bar {
  &.div-scroll {
    position: absolute;
  }
  &.body-scroll {
    position: fixed;
  }
}

.router-view {
  width: 100%;
}

#mainTabBar {
  .ui-tab-bar-item:nth-child(3) {
    .icon {
      position: absolute;
      top: -10px;
      left: 50%;
      transform: translateX(-50%);
      display: flex;
      align-items: center;
      justify-content: center;
      width: 50px;
      height: 50px;
      border-radius: 50%;
      border: 1px solid rgba(231, 231, 231, 0.8);
      background-color: #fff;
      // background-color: #3399ff;
      background-color: #fbd954;
      box-shadow: 0px -2px 1px #eee;
      border: 4px solid #fff;
    }
    .text {
      position: absolute;
      top: 30px;
      left: 50%;
      margin-left: -13px;
    }
  }
}

.default {
  display: none;
}

.openstyle {
  z-index: 701;
  animation: open 0.5s;
  animation-fill-mode: forwards;
  animation-delay: 0.2s;
}

@keyframes open {
  0% {
    display: block;
    transform: rotate(0);
  }
  100% {
    display: block;
    transform: rotate(45deg);
  }
}

.closestyle {
  z-index: 701;
  animation: close 0.5s;
  animation-fill-mode: forwards;
}

@keyframes close {
  0% {
    transform: rotate(45deg);
  }
  100% {
    transform: rotate(0);
  }
}

.icon_view {
  height: 100%;
  z-index: 999;
  .mix-flex-center();
}
</style>
